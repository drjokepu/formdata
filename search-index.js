var searchIndex = {};
searchIndex["formdata"] = {"doc":"This library provides a type for storing `multipart/form-data` data, as well as functions\nto stream (read or write) such data over HTTP.","items":[[3,"FilePart","formdata","A file that is to be inserted into a `multipart/*` or alternatively an uploaded file that\nwas received as part of `multipart/*` parsing.",null,null],[12,"headers","","The headers of the part",0,null],[12,"path","","A temporary file containing the file content",0,null],[12,"size","","Optionally, the size of the file.  This is filled when multiparts are parsed, but is\nnot necessary when they are generated.",0,null],[3,"FormData","","The extracted text fields and uploaded files from a `multipart/form-data` request.",null,null],[12,"fields","","Name-value pairs for plain text fields. Technically, these are form data parts with no\nfilename specified in the part&#39;s `Content-Disposition`.",1,null],[12,"files","","Name-value pairs for temporary files. Technically, these are form data parts with a filename\nspecified in the part&#39;s `Content-Disposition`.",1,null],[4,"Error","","An error type for the `formdata` crate.",null,null],[13,"NoRequestContentType","","The Hyper request did not have a Content-Type header.",2,null],[13,"NotMultipart","","The Hyper request Content-Type top-level Mime was not `Multipart`.",2,null],[13,"NotFormData","","The Hyper request Content-Type sub-level Mime was not `FormData`.",2,null],[13,"BoundaryNotSpecified","","The Content-Type header failed to specify boundary token.",2,null],[13,"PartialHeaders","","A multipart section contained only partial headers.",2,null],[13,"MissingDisposition","","A multipart section did not have the required Content-Disposition header.",2,null],[13,"InvalidDisposition","","A multipart section did not have a valid corresponding Content-Disposition.",2,null],[13,"NoName","","A multipart section Content-Disposition header failed to specify a name.",2,null],[13,"Eof","","The request body ended prior to reaching the expected terminating boundary.",2,null],[13,"Httparse","","An HTTP parsing error from a multipart section.",2,null],[13,"Io","","An I/O error.",2,null],[13,"Hyper","","An error was returned from Hyper.",2,null],[13,"Utf8","","An error occurred during UTF-8 processing.",2,null],[13,"Decoding","","An error occurred during character decoding",2,null],[13,"Multipart","","A MIME multipart error",2,null],[13,"NotAFile","","Filepart is not a file",2,null],[5,"read_formdata","","Parse MIME `multipart/form-data` information from a stream as a `FormData`.",null,{"inputs":[{"name":"s"},{"name":"headers"}],"output":{"name":"result"}}],[5,"write_formdata","","Stream out `multipart/form-data` body content matching the passed in `formdata`.  This\ndoes not stream out headers, so the caller must stream those out before calling\nwrite_formdata().",null,{"inputs":[{"name":"s"},{"name":"formdata"}],"output":{"name":"result"}}],[5,"write_formdata_chunked","","Stream out `multipart/form-data` body content matching the passed in `formdata` as\nTransfer-Encoding: Chunked.  This does not stream out headers, so the caller must stream\nthose out before calling write_formdata().",null,{"inputs":[{"name":"s"},{"name":"formdata"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"new","","",1,{"inputs":[],"output":{"name":"formdata"}}],[11,"to_multipart","","Create a mime-multipart Vec&lt;Node&gt; from this FormData",1,null],[11,"new","","",0,{"inputs":[{"name":"headers"},{"name":"path"}],"output":{"name":"filepart"}}],[11,"do_not_delete_on_drop","","If you do not want the file on disk to be deleted when Self drops, call this\nfunction.  It will become your responsability to clean up.",0,null],[11,"create","","Create a new temporary FilePart (when created this way, the file will be\ndeleted once the FilePart object goes out of scope).",0,{"inputs":[{"name":"headers"}],"output":{"name":"result"}}],[11,"filename","","Filename that was specified when the file was uploaded.  Returns `Ok&lt;None&gt;` if there\nwas no content-disposition header supplied.",0,null],[11,"content_type","","Mime content-type specified in the header",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"drop","","",0,null]],"paths":[[3,"FilePart"],[3,"FormData"],[4,"Error"]]};
initSearch(searchIndex);
